A few useful notes for compiling DGD

DGD's build process is very simple, and doesn't have
a configure script.  Platforms are detected in
src/Makefile.

DGD can be compiled on Unix-like systems and on Windows.  See
src/host/win32/README for additional information regarding
the Windows build.

There are a few things you can enable/disable by adding the
proper defines to the Makefile on Unix systems, or to your
project on Visual Studio.


SLASHSLASH		      C++ style // comments in LPC code.

NETWORK_EXTENSIONS	      Enable extended network functionality
			      (outgoing connections, opening ports
			      from LPC code)

NOFLOAT			      Compile without host floats (LPC floats will
			      still work).

CLOSURES		      Function pointers, implemented as a builtin
			      type.  See doc/builtin for information
			      about adding builtin types.
			      CLOSURES allows taking the address of a
			      function with &func(), and calling the
			      function that a function pointer refers to
			      with (*func)().  When creating a pointer to
			      a function, function arguments may be
			      included: &func("foo").  More function
			      arguments can be added when the function is
			      called, or in constructing a new pointer:
			      &(*func)("bar")

CO_THROTTLE		      Enables callout throttling.  Set it to the
			      maximum number of callouts to run per I/O
			      task.  This can be useful for preventing
			      callout bombs from jamming your mud.
